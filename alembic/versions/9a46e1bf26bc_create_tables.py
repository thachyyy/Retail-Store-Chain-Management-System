"""Create tables

Revision ID: 9a46e1bf26bc
Revises: 
Create Date: 2024-03-08 17:10:40.657116

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9a46e1bf26bc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('contract_for_vendor',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('minimum_order_amount', sa.Integer(), nullable=True),
    sa.Column('minimum_order_quantity', sa.Integer(), nullable=True),
    sa.Column('ordering_cycle_amount', sa.Integer(), nullable=True),
    sa.Column('ordering_cycle_quantity', sa.Integer(), nullable=True),
    sa.Column('belong_to_vendor', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contract_for_product',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('contract_for_vendor_id', sa.String(length=16), nullable=False),
    sa.Column('product_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('dob', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.String(length=8), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=16), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('district', sa.String(length=64), nullable=True),
    sa.Column('province', sa.String(length=64), nullable=True),
    sa.Column('reward_point', sa.String(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('employee',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=16), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=32), nullable=False),
    sa.Column('role', sa.String(length=16), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('district', sa.String(length=255), nullable=False),
    sa.Column('province', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('branch_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('invoice_for_customer',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=False),
    sa.Column('belong_to_order', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('belong_to_order')
    )
    op.create_table('invoice_from_vendor',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('payment_deadline', sa.Date(), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('vendor_id', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_of_batch',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('purchase_order_id', sa.String(length=16), nullable=False),
    sa.Column('batch_id', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('barcode', sa.String(length=255), nullable=True),
    sa.Column('product_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('categories', sa.String(length=255), nullable=True),
    sa.Column('brand', sa.String(length=255), nullable=False),
    sa.Column('unit', sa.String(length=255), nullable=True),
    sa.Column('last_purchase_price', sa.Integer(), nullable=False),
    sa.Column('sale_price', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.Column('has_promotion', sa.Boolean(), nullable=False),
    sa.Column('contract_for_vendor_id', sa.String(length=16), nullable=True),
    sa.Column('promotion_id', sa.String(length=16), nullable=True),
    sa.Column('batch_id', sa.String(length=16), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode')
    )
    op.create_index(op.f('ix_product_batch_id'), 'product', ['batch_id'], unique=False)
    op.create_index(op.f('ix_product_brand'), 'product', ['brand'], unique=False)
    op.create_index(op.f('ix_product_contract_for_vendor_id'), 'product', ['contract_for_vendor_id'], unique=False)
    op.create_index(op.f('ix_product_last_purchase_price'), 'product', ['last_purchase_price'], unique=False)
    op.create_index(op.f('ix_product_promotion_id'), 'product', ['promotion_id'], unique=False)
    op.create_index(op.f('ix_product_sale_price'), 'product', ['sale_price'], unique=False)
    op.create_table('promotion',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('promotion_code', sa.String(length=20), nullable=False),
    sa.Column('promotion_name', sa.String(length=255), nullable=False),
    sa.Column('promotion_type', sa.String(length=255), nullable=False),
    sa.Column('promotion_value', sa.Integer(), nullable=False),
    sa.Column('max_discount_amount', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('min_product_value', sa.Integer(), nullable=True),
    sa.Column('min_product_quantity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('promotion_code')
    )
    op.create_table('promotion_for_order',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('promotion_id', sa.String(length=16), nullable=False),
    sa.Column('purchase_order_id', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchase_order',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('estimated_delivery_date', sa.DateTime(), nullable=False),
    sa.Column('tax', sa.Integer(), nullable=True),
    sa.Column('subtotal', sa.Integer(), nullable=False),
    sa.Column('promote', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('tax_percentage', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('handle_by', sa.String(length=16), nullable=False),
    sa.Column('belong_to_customer', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_settings',
    sa.Column('id', sa.String(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('is_maintain', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('vendor',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('vendor_name', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('district', sa.String(length=64), nullable=True),
    sa.Column('province', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('vendor_name')
    )
    op.create_table('import_order',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('is_contract', sa.Boolean(), nullable=False),
    sa.Column('estimated_date', sa.Date(), nullable=False),
    sa.Column('delivery_status', sa.String(), nullable=False),
    sa.Column('payment_status', sa.String(), nullable=False),
    sa.Column('subtotal', sa.Integer(), nullable=False),
    sa.Column('promotion', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=16), nullable=False),
    sa.Column('belong_to_vendor', sa.String(length=16), nullable=False),
    sa.Column('belong_to_contract', sa.String(length=16), nullable=False),
    sa.Column('belong_to_invoice', sa.String(length=16), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branch',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('name_display', sa.String(length=255), nullable=False),
    sa.Column('name_detail', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('district', sa.String(length=255), nullable=True),
    sa.Column('province', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.Column('manager_id', sa.String(length=16), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('manager_id'),
    sa.UniqueConstraint('name_detail'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('product_of_import_order',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('product_id',sa.String(), nullable=False),
    sa.Column('import_order_id', sa.String(length=16), nullable=False),
    sa.Column('import_price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['import_order_id'], ['import_order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('import_price', sa.Integer(), nullable=False),
    sa.Column('manufacturing_date', sa.Date(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('belong_to_branch', sa.String(length=16), nullable=False),
    sa.Column('belong_to_receipt', sa.String(length=16), nullable=False),
    sa.ForeignKeyConstraint(['belong_to_branch'], ['branch.id'], ),
    sa.ForeignKeyConstraint(['belong_to_receipt'], ['import_order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotion_belong_to_branch',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('promotion_id', sa.String(length=16), nullable=False),
    sa.Column('branch_id', sa.String(length=16), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], ),
    sa.ForeignKeyConstraint(['promotion_id'], ['promotion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE IF EXISTS promotion_belong_to_branch CASCADE")
    op.execute("DROP TABLE IF EXISTS product_of_import_order CASCADE")
    op.execute("DROP TABLE IF EXISTS import_order CASCADE")
    op.execute("DROP TABLE IF EXISTS vendor CASCADE")
    op.execute("DROP TABLE IF EXISTS system_settings CASCADE")
    op.execute("DROP TABLE IF EXISTS purchase_order CASCADE")
    op.execute("DROP TABLE IF EXISTS promotion_for_order CASCADE")
    op.execute("DROP TABLE IF EXISTS promotion CASCADE")
    # Dropping indexes does not require CASCADE
    op.drop_index(op.f('ix_product_sale_price'), table_name='product')
    op.drop_index(op.f('ix_product_promotion_id'), table_name='product')
    op.drop_index(op.f('ix_product_last_purchase_price'), table_name='product')
    op.drop_index(op.f('ix_product_contract_for_vendor_id'), table_name='product')
    op.drop_index(op.f('ix_product_brand'), table_name='product')
    op.drop_index(op.f('ix_product_batch_id'), table_name='product')
    # Dropping product table with CASCADE
    op.execute("DROP TABLE IF EXISTS product CASCADE")
    op.execute("DROP TABLE IF EXISTS order_of_batch CASCADE")
    op.execute("DROP TABLE IF EXISTS invoice_from_vendor CASCADE")
    op.execute("DROP TABLE IF EXISTS invoice_for_customer CASCADE")
    op.execute("DROP TABLE IF EXISTS employee CASCADE")
    op.execute("DROP TABLE IF EXISTS customer CASCADE")
    op.execute("DROP TABLE IF EXISTS contract_for_product CASCADE")
    op.execute("DROP TABLE IF EXISTS contract_for_vendor CASCADE")
    op.execute("DROP TABLE IF EXISTS categories CASCADE")
    op.execute("DROP TABLE IF EXISTS branch CASCADE")
    op.execute("DROP TABLE IF EXISTS batch CASCADE")
    # ### end Alembic commands ###
