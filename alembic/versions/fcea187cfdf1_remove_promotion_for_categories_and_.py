"""Remove promotion for categories and modify name of promotion belong to branch

Revision ID: fcea187cfdf1
Revises: 8f49b506ef95
Create Date: 2024-03-01 11:21:49.878390

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fcea187cfdf1'
down_revision: Union[str, None] = '8f49b506ef95'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('promotion_belong_to_branch',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('promotion_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('branch_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], ),
    sa.ForeignKeyConstraint(['promotion_id'], ['promotion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('pomotion_belong_to_branch')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pomotion_belong_to_branch',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('promotion_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('branch_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], name='pomotion_belong_to_branch_branch_id_fkey'),
    sa.ForeignKeyConstraint(['promotion_id'], ['promotion.id'], name='pomotion_belong_to_branch_promotion_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pomotion_belong_to_branch_pkey')
    )
    op.drop_table('promotion_belong_to_branch')
    # ### end Alembic commands ###
